name: 🌐 Web builds
on:
  workflow_call:
    inputs:
      godot-ref:
        description: A tag, branch or commit hash in the Godot repository.
        type: string
        default: master
      limboai-ref:
        description: A tag, branch or commit hash in the LimboAI repository.
        type: string
        default: master

  workflow_dispatch:
    inputs:
      godot-ref:
        description: A tag, branch or commit hash in the Godot repository.
        type: string
        default: master
      limboai-ref:
        description: A tag, branch or commit hash in the LimboAI repository.
        type: string
        default: master

# Global Settings
env:
  # Note: With `lto=full` VM runs out of ram and the build fails.
  SCONSFLAGS: use_static_cpp=yes debug_symbols=no lto=thin optimize=size verbose=yes warnings=extra
  EM_VERSION: 4.0.11
  EM_CACHE_FOLDER: "emsdk-cache"
  CACHE_LIMIT: 4

jobs:
  web-builds:
    runs-on: "ubuntu-22.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Template (release)
            target: template_release
            threads: true
            dlink: false

          - name: Template (release, dlink)
            target: template_release
            threads: true
            dlink: true

          - name: Template (debug)
            target: template_debug
            threads: true
            dlink: false

          - name: Template (debug, dlink)
            target: template_debug
            threads: true
            dlink: true

          - name: Template (release, nothreads)
            target: template_release
            threads: false
            dlink: false

          - name: Template (release, nothreads, dlink)
            target: template_release
            threads: false
            dlink: true

          - name: Template (debug, nothreads)
            target: template_debug
            threads: false
            dlink: false

          - name: Template (debug, nothreads, dlink)
            target: template_debug
            threads: false
            dlink: true

    env:
      CACHE_NAME: godot.web.${{matrix.target}}${{  matrix.dlink == true && '.dlink' || ''  }}

    steps:
      - name: Clone Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: ${{ inputs.godot-ref }}

      - name: Clone LimboAI module
        uses: actions/checkout@v4
        with:
          path: modules/limboai
          ref: ${{ inputs.limboai-ref }}

      # Inits GODOT_VERSION, LIMBOAI_VERSION and NAME_PREFIX environment variables.
      - uses: ./modules/limboai/.github/actions/init-version

      - name: Set up Emscripten cache
        uses: actions/cache@v4
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{runner.os}}-libs

      - name: Set up Emscripten
        uses: mymindstorm/setup-emsdk@6ab9eb1bda2574c4ddb79809fc9247783eaf9021 # v14
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Verify Emscripten setup
        run: |
          emcc -v

      - name: Set up scons
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons==4.4.0
          python --version
          scons --version

      # ! Note: we stopped using the scons cache in release builds.
      # - name: Set up scons cache
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{github.workspace}}/.scons_cache/
      #     key: ${{env.CACHE_NAME}}-${{inputs.godot-ref}}-${{inputs.limboai-ref}}-${{env.LIMBOAI_VERSION}}
      #     restore-keys: |
      #       ${{env.CACHE_NAME}}-${{inputs.godot-ref}}-${{inputs.limboai-ref}}-${{env.LIMBOAI_VERSION}}
      #       ${{env.CACHE_NAME}}-${{inputs.godot-ref}}-${{inputs.limboai-ref}}
      #       ${{env.CACHE_NAME}}-${{inputs.godot-ref}}

      - name: Compilation
        run: |
          scons platform=web target=${{matrix.target}} threads=${{matrix.threads}} dlink_enabled=${{matrix.dlink}} ${{env.SCONSFLAGS}} cache_path=${{github.workspace}}/.scons_cache/ cache_limit=${{env.CACHE_LIMIT}}

      - name: Prepare artifacts
        run: |
          mkdir -p out/templates/
          mv bin/godot.web.template_debug.wasm32.zip out/templates/web_debug.zip || true
          mv bin/godot.web.template_debug.wasm32.nothreads.zip out/templates/web_nothreads_debug.zip || true
          mv bin/godot.web.template_debug.wasm32.dlink.zip out/templates/web_dlink_debug.zip || true
          mv bin/godot.web.template_debug.wasm32.nothreads.dlink.zip out/templates/web_dlink_nothreads_debug.zip || true
          mv bin/godot.web.template_release.wasm32.zip out/templates/web_release.zip || true
          mv bin/godot.web.template_release.wasm32.nothreads.zip out/templates/web_nothreads_release.zip || true
          mv bin/godot.web.template_release.wasm32.dlink.zip out/templates/web_dlink_release.zip || true
          mv bin/godot.web.template_release.wasm32.nothreads.dlink.zip out/templates/web_dlink_nothreads_release.zip || true
          rm -rf bin/
          echo "${GODOT_VERSION}.limboai+${LIMBOAI_VERSION}" > out/templates/version.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.NAME_PREFIX}}.${{matrix.target}}.web${{matrix.threads == false && '.nothreads' || ''}}${{matrix.dlink == true && '.dlink' || ''}}
          path: out/*
